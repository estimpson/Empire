<!doctype html>
<html>
<head>
	<title>Empire Electronics Logistics Map</title>
	<meta charset="utf-8">
	<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
	<link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.6.4/leaflet.css" />
	 <!--[if lte IE 8]>
	     <link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.6.4/leaflet.ie.css" />
	 <![endif]-->

	 
 	<style type="text/css">
		body {
			padding: 0;
			margin: 0;
		}
		html, body, #map {
			height: 100%; 
		}
 	</style>
 	
	<body>
		
		<div id="map"></div> 
		<script src="jquery-3.1.0.min.js"></script>
		<script src="leaflet/leaflet.js"></script>


		<script>
		var empire = new L.LayerGroup();
		var supplier = new L.LayerGroup();
		var EEH = new L.LayerGroup();
		var EEP = new L.LayerGroup();
		var EEA = new L.LayerGroup();
		var SPI = new L.LayerGroup();

		var defaultIconSize = new L.Point(60, 60);
		var transformation = new L.Transformation(1, 0, 1, 0);
		var currentZoom = 7;
		var newIconSize = transformation.transform(defaultIconSize, sizeFactor(currentZoom));
		var newIconAnchor = new L.Point(Math.round(newIconSize.x / 2), newIconSize.y);
		var newIcon = new L.Icon.Default({
		    iconSize: newIconSize,
		    iconAnchor: newIconAnchor});

		var map = L.map('map').setView([42.5, -84.7], 7);



		//add base map layer
		L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {
		    attribution: '&copy; <a href="http://osm.org/copyright">OpenStreetMap</a> contributors'
		}).addTo(map);





		

//load empire data
		$.getJSON("data/empire.js",function(data){
			L.geoJson(data,{
				pointToLayer: function(feature,latlng){
					var smallIcon = L.icon({
						iconSize:[60,47],
						iconAnchor:[30,47],
						popupAnchor:[0,-47],
						iconUrl:'images/logo2.png'
					});
			return L.marker(latlng, {icon: smallIcon});
				},
			onEachFeature: function (feature, layer) {
      			layer.bindPopup(feature.properties.name + '<br/>' + feature.properties.address);
  			}
    		}).addTo(empire);
  	});

//load supplier data
		$.getJSON("data/suppliers.js",function(data){
			L.geoJson(data,{
				pointToLayer: function(feature,latlng){
					var smallIcon = L.icon({
						iconSize:newIconSize,
						iconAnchor:newIconAnchor,
						popupAnchor:[0,-60],
						iconUrl:'images/' + feature.properties.commodity + '.png'
					});
			return L.marker(latlng, {icon: smallIcon});
				},
			onEachFeature: function (feature, layer) {
      			layer.bindPopup(feature.properties.name + '<br/>' + feature.properties.address);
  			}
    		}).addTo(supplier);

  	});

//load overlays		
	var overlays = {
		"Empire": empire,
		"Suppliers": supplier
		//"Resin": resin,
		//"Connector": connector,
		//"Tape": tape,
		//"Terminal" : terminal,
		//"Stamp" : stamp,
		//"LED" : LED,
		//"Customers": customer,
	};

		L.control.layers("",overlays).addTo(map);

map.on('zoomend', changeIconSize);

		function changeIconSize(e) {

		  // this is the default size (of the default icon); it should be known beforehand;
		  var defaultIconSize = new L.Point(60, 60);
		  //var defaultShadowSize = new L.Point(41, 41);

		  // use leaflet's internal methods to scale the size (a bit overkill for this case...)
		  var transformation = new L.Transformation(1, 0, 1, 0);

		  var currentZoom = map.getZoom();
		  var newIconSize = transformation.transform(defaultIconSize, sizeFactor(currentZoom));
		  //var newShadowSize = transformation.transform(defaultShadowSize, sizeFactor(currentZoom));

		  // adjust the icon anchor to the new size
		  var newIconAnchor = new L.Point(Math.round(newIconSize.x / 2), newIconSize.y);

		  // finally, declare a new icon and update the marker
		  var newIcon = new L.Icon.Default({
		    iconSize: newIconSize,
		    iconAnchor: newIconAnchor,
		   // shadowSize: newShadowSize,
		  });
		}

		function sizeFactor(zoom) {
		  if (zoom <= 8) return 0.3;
		  else if (zoom == 9) return 0.4;
		  else if (zoom == 10) return 0.5;
		  else if (zoom == 11) return 0.7;
		  else if (zoom == 12) return 0.85;
		  else if (zoom == 13) return 1.0;
		  else if (zoom == 14) return 1.3;
		  else if (zoom == 15) return 1.6;
		  else if (zoom == 16) return 1.9;
		  else // zoom >= 17
		  return 2.2;
		};

		</script>
	</body>
</html>